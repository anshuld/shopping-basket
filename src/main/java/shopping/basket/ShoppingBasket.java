/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package shopping.basket;

import static java.util.stream.Collectors.toList;

import com.google.common.base.Preconditions;
import shopping.basket.item.Item;
import shopping.basket.item.ItemsFactory;
import shopping.basket.offer.OfferFactory;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class ShoppingBasket {
    public Integer calculateInPence(final List<String> itemNames) {

        Preconditions.checkNotNull(itemNames, "The list containing item names must not be null");
        List<Item> items = itemNames.stream()
                .map(ItemsFactory::toItem)
                .collect(toList());

        Optional<Integer> result = items.stream()
                .map(Item::getPriceInPence)
                .reduce(Integer::sum);

        Integer initialCost = result.orElse(0);
        Integer finalCost = OfferFactory.offers(items).reduce(
                initialCost,
                (cost, offer) -> offer.apply(cost),
                Integer::sum
        );

        return finalCost;
    }

}
