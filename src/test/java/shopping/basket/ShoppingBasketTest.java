/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package shopping.basket;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatThrownBy;

import org.junit.Test;

import java.util.List;

public class ShoppingBasketTest {

    ShoppingBasket basket = new ShoppingBasket();

    @Test
    public void testPrice_when_no_offers() {
        assertThat(basket.calculateInPence(List.of("Apple", "Apple", "Bananas"))).isEqualTo(90);
    }

    @Test
    public void testPrice_with_bogo_free_offer() {
        assertThat(basket.calculateInPence(List.of("Melons", "Melons", "Bananas"))).isEqualTo(70);
    }

    @Test
    public void testPrice_that_bogo_free_offer_applied_to_even_items_only() {
        List<String> duplicateItemsButOddNumbered = List.of("Melons", "Melons", "Bananas", "Melons");
        assertThat(basket.calculateInPence(duplicateItemsButOddNumbered)).isEqualTo(120);
    }

    @Test
    public void testPrice_that_bogo_free_offer_not_applied_to_Bananas() {
        List<String> duplicateItemsButOddNumbered = List.of("Bananas", "Melons", "Bananas", "Limes");
        assertThat(basket.calculateInPence(duplicateItemsButOddNumbered)).isEqualTo(105);
    }

    @Test
    public void testPrice_with_3For2_offer() {
        assertThat(basket.calculateInPence(List.of("Limes", "Melons", "Limes", "Bananas", "Limes"))).isEqualTo(100);
    }

    @Test
    public void testPrice_that_3For2_offer_only_applied_to_Triplet_Limes() {
        assertThat(basket.calculateInPence(List.of("Limes", "Melons", "Limes", "Limes", "Limes", "Bananas", "Limes"))).isEqualTo(130);
    }

    /**
     * TODO - complete this test
     */
    @Test
    public void test_appropriateError_When_NullShoppingBasket() {
        assertThatThrownBy(() -> basket.calculateInPence(null)).isInstanceOf(NullPointerException.class);
    }
}
